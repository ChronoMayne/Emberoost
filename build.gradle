buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

repositories {
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

group = 'WolfShotz.Wyrmroost' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${project.archivesBaseName}"
version = "${project.mod_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: project.mcp_channel, version: "${project.mcp_mappings}-${project.mc_version}"

    // Default run configurations.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP' // Recommended logging data for a userdev environment
            property 'forge.logging.console.level', 'debug' // Recommended logging level for the console
            mods { wyrmroost { source sourceSets.main } }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP' // Recommended logging data for a userdev environment
            property 'forge.logging.console.level', 'debug' // Recommended logging level for the console
            mods { wyrmroost { source sourceSets.main } }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP' // Recommended logging data for a userdev environment
            property 'forge.logging.console.level', 'debug' // Recommended logging level for the console
            args '--mod', 'wyrmroost', '--all', '--output', file('src/generated/resources/')
            mods { wyrmroost { source sourceSets.main } }
        }
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    compile 'citadel:citadel:1.0.0:deobf'
}

jar {

    manifest {
        attributes([
            "Specification-Title": project.name,
            "Specification-Vendor": "WolfShotz",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${project.mod_version}",
            "Implementation-Vendor" :"WolfShotz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

/*
  Example configuration to allow publishing using the maven-publish task
  we define a custom artifact that is sourced from the reobfJar output task
  and then declare that to be published
  Note you'll need to add a repository here
*/
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {

    publications { mavenJava(MavenPublication) { artifact reobfArtifact } }
    repositories { maven { url "file:///${project.projectDir}/mcmodsrepo" } }
}